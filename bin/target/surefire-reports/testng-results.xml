<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="test.java.NewTest" duration-ms="372599" started-at="2015-06-12T08:12:31Z" finished-at="2015-06-12T08:18:44Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="372599" started-at="2015-06-12T08:12:31Z" finished-at="2015-06-12T08:18:44Z">
      <class name="test.java.NewTest">
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:test.java.NewTest@69d9c55]" name="BeforeTest" is-config="true" duration-ms="300" started-at="2015-06-12T11:12:31Z" finished-at="2015-06-12T11:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="setUp" is-config="true" duration-ms="13724" started-at="2015-06-12T11:12:31Z" finished-at="2015-06-12T11:12:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.java.NewTest.testLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLogin()[pri:0, instance:test.java.NewTest@69d9c55]" name="testLogin" duration-ms="6680" started-at="2015-06-12T11:12:45Z" finished-at="2015-06-12T11:12:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.java.NewTest@69d9c55]" name="tearDown" is-config="true" duration-ms="249" started-at="2015-06-12T11:12:52Z" finished-at="2015-06-12T11:12:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="takeScreenShotOnFailure" is-config="true" duration-ms="0" started-at="2015-06-12T11:12:52Z" finished-at="2015-06-12T11:12:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=NewTest.testLogin()[pri:0, instance:test.java.NewTest@69d9c55] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.NewTest.testLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="setUp" is-config="true" duration-ms="14936" started-at="2015-06-12T11:12:52Z" finished-at="2015-06-12T11:13:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.java.NewTest.testDeleteDevice() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDeleteDevice()[pri:0, instance:test.java.NewTest@69d9c55]" name="testDeleteDevice" duration-ms="7457" started-at="2015-06-12T11:13:07Z" finished-at="2015-06-12T11:13:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteDevice -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="takeScreenShotOnFailure" is-config="true" duration-ms="1" started-at="2015-06-12T11:13:14Z" finished-at="2015-06-12T11:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteDevice status=SUCCESS method=NewTest.testDeleteDevice()[pri:0, instance:test.java.NewTest@69d9c55] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.NewTest.testDeleteDevice() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.java.NewTest@69d9c55]" name="tearDown" is-config="true" duration-ms="283" started-at="2015-06-12T11:13:14Z" finished-at="2015-06-12T11:13:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="setUp" is-config="true" duration-ms="13093" started-at="2015-06-12T11:13:15Z" finished-at="2015-06-12T11:13:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.java.NewTest.testAddDevice() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddDevice()[pri:0, instance:test.java.NewTest@69d9c55]" name="testAddDevice" duration-ms="135560" started-at="2015-06-12T11:13:28Z" finished-at="2015-06-12T11:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDevice -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="takeScreenShotOnFailure" is-config="true" duration-ms="1" started-at="2015-06-12T11:15:43Z" finished-at="2015-06-12T11:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddDevice status=SUCCESS method=NewTest.testAddDevice()[pri:0, instance:test.java.NewTest@69d9c55] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.NewTest.testAddDevice() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.java.NewTest@69d9c55]" name="tearDown" is-config="true" duration-ms="320" started-at="2015-06-12T11:15:43Z" finished-at="2015-06-12T11:15:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="setUp" is-config="true" duration-ms="13598" started-at="2015-06-12T11:15:44Z" finished-at="2015-06-12T11:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.java.NewTest.testLogout() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLogout()[pri:0, instance:test.java.NewTest@69d9c55]" name="testLogout" duration-ms="8852" started-at="2015-06-12T11:15:57Z" finished-at="2015-06-12T11:16:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogout -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.java.NewTest@69d9c55]" name="tearDown" is-config="true" duration-ms="291" started-at="2015-06-12T11:16:06Z" finished-at="2015-06-12T11:16:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="takeScreenShotOnFailure" is-config="true" duration-ms="0" started-at="2015-06-12T11:16:06Z" finished-at="2015-06-12T11:16:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogout status=SUCCESS method=NewTest.testLogout()[pri:0, instance:test.java.NewTest@69d9c55] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.NewTest.testLogout() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="setUp" is-config="true" duration-ms="13287" started-at="2015-06-12T11:16:06Z" finished-at="2015-06-12T11:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.java.NewTest.testControl() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testControl()[pri:0, instance:test.java.NewTest@69d9c55]" name="testControl" duration-ms="143358" started-at="2015-06-12T11:16:20Z" finished-at="2015-06-12T11:18:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at tests.Control.armDisarm(Control.java:129)
	at tests.Control.execute(Control.java:52)
	at test.java.NewTest.testControl(NewTest.java:263)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testControl -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.java.NewTest@69d9c55]" name="takeScreenShotOnFailure" is-config="true" duration-ms="338" started-at="2015-06-12T11:18:43Z" finished-at="2015-06-12T11:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testControl status=FAILURE method=NewTest.testControl()[pri:0, instance:test.java.NewTest@69d9c55] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.java.NewTest.testControl() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.java.NewTest@69d9c55]" name="tearDown" is-config="true" duration-ms="238" started-at="2015-06-12T11:18:43Z" finished-at="2015-06-12T11:18:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.java.NewTest -->
    </test> <!-- Command line test -->
  </suite> <!-- test.java.NewTest -->
</testng-results>
